#EXTINF:-1 tvg-name="ert1" tvg-id="ert1",ERT1

from videojs import VideoJS
from videojs.skins import NuevoSkin

# HTML template with the video player
html_template = """
<!DOCTYPE html>
<html>
<head>
    <link href="//domain.com/videojs/skins/nuevo/videojs.min.css" rel="stylesheet">
</head>
<body>
    <div>
        <video id="ERT1" width="640" height="480" class="video-js vjs-16-9" 
               poster="https://www.flagsonline.it/uploads/2016-9-2/1200-0/grecia.jpg" 
               controls preload="none" data-setup='{}'>
            <source src="https://s2.cystream.net/live/ert1/chunks.m3u8?nimblesessionid=18927589&wmsAuthSign=c2VydmVyX3RpbWU9NC82LzIwMjUgNTo0NTo0MSBQTSZoYXNoX3ZhbHVlPWpIeTUwQUtxaUNGUGtrK3N0OWRjQWc9PSZ2YWxpZG1pbnV0ZXM9MjA=" 
                    type="application/vnd.apple.mpegurl">
        </video>
    </div>
</body>
</html>
"""

# Initialize the VideoJS player with configuration
player = VideoJS(
    video_id="ERT1",
    html_template=html_template,
    scripts=[
        "//domain.com/videojs/video.min.js",
        "//domain.com/videojs/nuevo.min.js"
    ],
    config={
        'liveui': True,
        'fluid': True,
        'aspectRatio': '16:9'
    }
)

# Set up error handling
def handle_error(player):
    error = player.get_error()
    print(f'An error occurred: {error}')

player.on('error', handle_error)

# To render the player (in a web framework like Flask/Django you would return the HTML)
print(player.render())
